(include "lib/asm/func.inc")
(include "class/num/class.inc")
(include "class/stream/class.inc")
(include "class/lisp/class.inc")

(def-method 'lisp :lisp_read)
	;inputs
	;:r0 = lisp object (ptr)
	;:r1 = args list object (ptr)
	;outputs
	;:r0 = lisp object (ptr)
	;:r1 = return value object (ptr)
	;trashes
	;:r1-:r14

	(def-vars
		(ptr this args value form)
		(int next_char))

	(push-scope)
	(entry 'lisp :lisp_read {this, args})

	(errorif-lisp-args-sig :r1 2 'error1)

	(call 'list :get_first {args} {_, value})
	(call 'list :get_second {args} {_, args})
	(call 'num :get_value {args} {_, next_char})
	(call 'lisp :read {this, value, next_char} {_, form, next_char})

	(call 'num :create {next_char} {args})
	(call 'list :create :nil {value})
	(call 'list :push_back2 {value, form, args})

	(exit 'lisp :lisp_read {this, value})
	(return)

(errorcase
(vp-label 'error1)
	(jump 'lisp :repl_error {this, "(read stream last_char)", +error_msg_wrong_types, args})
	(signature '(stream num)))

	(pop-scope-syms)

(def-func-end)
