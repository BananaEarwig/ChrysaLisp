<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string></string>
	<key>fileTypes</key>
	<array>
		<string>lisp</string>
		<string>cl</string>
		<string>l</string>
		<string>mud</string>
		<string>el</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\(</string>
	<key>foldingStopMarker</key>
	<string>\)</string>
	<key>keyEquivalent</key>
	<string>^~L</string>
	<key>name</key>
	<string>Lisp</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(;).*$\n?</string>
			<key>name</key>
			<string>comment.line.semicolon.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:defgeneric|define-compiler-macro|define-method-combination|define-modify-macro|define-setf-expander|defmethod|define-\S+))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
			<key>name</key>
			<string>meta.function.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=\s)(?i:&allow-other-keys|&aux|&body|&environment|&key|&optional|&rest|&whole)(?=\s+)</string>
			<key>name</key>
			<string>meta.function-parameters.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:deftype|defstruct|define-condition|defpackage|defclass))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function-type.lisp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:\()((?i:defvar|defconstant|defparameter|define-symbol-macro))\s+((?:\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.constant.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#)(\w|[\\+-=&lt;&gt;'"&amp;#])+</string>
			<key>name</key>
			<string>constant.character.lisp</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.lisp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.lisp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?<=^|\s|[()])(\*)(\S*)(\*)(?=$|\s|[()])</string>
			<key>name</key>
			<string>variable.other.global.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=^|\s|[()]):(\w|[+\-<>/*&amp;=.?!$%:@\[\]^{}~#|])*</string>
			<key>name</key>
			<string>keyword.constant.lisp</string>
		</dict>
		<dict>
			<key>match</key>
				<string>(?<=^|\s|[()])(zip|Xset\?|Xset-k|Xset|Xnode\?|Xnode|XML-parse|Xmap\?|Xmap-kv|Xmap|write-short|write-long|write-line|ui-hchart|write-int|write-char|write|within-compile-env|Window\?|Window|while|when|weak-ref|walk-list|View\?|view-locate|view-fit|View|Vdu\?|Vdu|values|updates-in\!|unzip|until|unless|undef|ui-window|ui-view|ui-vdu|ui-tree|ui-spinner|ui-tool-bar|ui-title-bar|ui-title|ui-textfield|ui-slider|ui-scroll|ui-root|ui-props|ui-progress|ui-merge-props|ui-label|ui-grid|ui-flow|ui-element|ui-canvas|ui-buttons|ui-button|ui-backdrop|type-to-size|type-of|trim-start|trim-end|trim|Spinner|Spinner\?|Tree\?|Tree|tolist|to-upper|to-service-id|to-net-id|to-lower|Title\?|Title|times|time-in-seconds|throw|texture-metrics|Textfield\?|Textfield|Text\?|Text|task-slice|task-sleep|task-netid|Syntax\?|Syntax|sym\?|sym|swap|SVG-info|SVG-Canvas|structure|string-stream|stream-seek|stream-flush|stream-avail|str\?|quasi-quote\?|str-to-num|str-as-num|str-alloc|str|stdio-get-args|starts-with|sqrt|split|sorted|sort|some\!|some-rev|some|Slider\?|Slider|slice|sin|sign|shuffled|shuffle|sets\!|sets-pairs\!|sets-in\!|setq|setf->|setf|setd|set\?|set-field|set|seq\?|second|Scroll\?|Scroll|save|reverse|rest|repl|reduce-rev|reduce|recip|reals|read-short|read-long|read-line|read-int|read-data|read-char|read-avail|read|rcurry|range|random|raise|quote|quasi-quote|push|Progress\?|Progress|progn|print|prin|prebind|pow|pos\?|pop|pixmap-tga-info|pixmap-save|pixmap-load|pixmap-info|pixmap-cpm-info|pivot|pii-write-char|pii-time|pii-remove|pii-read-char|pii-fstat|pii-dirlist|penv|path-transform|path-svg|path-stroke-polylines|path-stroke-polyline|path-stroke-polygons|max-length|path-stroke-polygon|path-simplify|path-gen-rect|path-gen-quadratic|path-gen-paths|path-gen-ellipse|path-gen-cubic|path-gen-arc|path-filter|path|partition|pairs-into-kv|pad|out-stream|or|opt|open-task|open-remote|open-pipe|open-child|odd\?|obj-ref|nums-sum|nums-sub|nums-scale|nums-mul|nums-mod|nums-min|nums-max|nums-dot|nums-div|nums-add|nums-abs|nums|num\?|num-to-utf8|num-to-char|num-intern|ntz|nto|notevery|notany|not|nlz|nlo|nempty\?|neg\?|neg|named-Xnode\?|third|named-Xnode|nil\?|n2r|n2i|n2f|defgetmethod|defsetmethod|min|merges|merge-obj|merge-into\!|max|match\?|map\?|map-rev|map|mail-validate|mail-timeout|mail-send|mail-select|mail-read|mail-poll|mail-nodes|mail-free-mbox|mail-forget|mail-enquire|mail-declare|mail-alloc-mbox|macroexpand|macro\?|macro|lower|logxor|lognot|logior|logand|log2|load-stream|load-path|load|Lmap\?|Lmap-kv|Lmap|list\?|list|lists|lists2|let\*|let|length|last|lambda-func\?|macro-func\?|lambda\?|lambda|Label\?|Label|keys|kernel-stats|join|jit|io-stream|into-set|into-map|into-fn|insert|indexable\?|inc|in-stream|in-set-state|in-next-msg|in-mbox|in-get-state|import|if|identity|hash|gui-update|gui-logout|gui-quit|gui-sub|gui-rpc|gui-init|gui-info|gui-event|gui-deinit|gui-add-front|gui-add-back|Grid\?|Grid|gets-in|gets|getf|get-ushort|get-uint|get-ubyte|get-short|get-nodeid|get-netid|get-long|get-int|get-field|get-cstr|get-byte|get|gensym|func\?|Fset\?|Fset-k|Fset|free-select|frac|font-sym-texture|font-glyph-ranges|font-glyph-paths|quote\?|font-glyph-bounds|Fmap\?|Fmap-kv|Fmap|Flow\?|Flow|floor|fixeds|first|find-rev|find|filter|file-stream|ffi|export-symbols|export-classes|export|expand|exec|every|even\?|eval|erase|eql|env\?|env-resize|env-push|env-pop|env|enums|enum|entries|ends-with|empty\?|empty|Emap\?|Emap-kv|Emap|elem-set|elem-get|dim-set|dim-get|dim|Edit\?|Edit|each\!|each-rev|each-mergeable-rev|each-mergeable|each-line|each|drop\!|defun|defq|defmethod|defmacro|deffimethod|defclass|defabstractmethod|def\?|def|dec|curry|create-stdio|create-font|cpu|cos|copy|static|const|cond|compose|collection\?|code|cmp|clipboard-put|clipboard-get|clear|char-to-num|char|catch|cat|case|cap|Canvas\?|canvas-to-argb32|Canvas-from-pixmap\?|Canvas-from-pixmap|task-nodeid|Canvas-from-file|canvas-from-argb32|canvas-darker|canvas-brighter|Canvas-base\?|Canvas-base|Canvas|Button\?|Button|Buffer\?|Buffer|bits|bind|Backdrop\?|Backdrop|ascii-upper|ascii-lower|ascii-code|ascii-char|array\?|array|apply|and|alloc-select|align|age|abs-path|abs|abi|os|#|lisp-node\?|cpp-node\?|lisp-nodes|byte-to-hex-str|short-to-hex-str|int-to-hex-str|long-to-hex-str|\>\>\>|\>\>|\>\=|\>|\=|\<\=|\<\<|\<|\+|\%|\/\=|\/|\*|\.super|\.\?|\.->|\.|\-|_structure)(?=\s|$|[()])</string>
			<key>name</key>
			<string>keyword.control.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?<=^|\s|[()])(?i:nil|t)(?=$|\s|[()])</string>
			<key>name</key>
			<string>constant.language.lisp</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.lisp</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.lisp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.lisp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.lisp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.lisp</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.lisp</string>
	<key>uuid</key>
	<string>00D451C9-6B1D-11D9-8DFA-000D93589AF6</string>
</dict>
</plist>
